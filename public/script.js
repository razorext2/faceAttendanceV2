const labels=[];fetch("/api/getPegawai").then((e=>e.json())).then((e=>{console.log("Initializing application"),labels.push(...e),initializeFaceAPI()})).catch((e=>console.error("Error fetching data",e)));const detectedFaces=new Set;let videoStream=null,webcamStarted=!1,modelsLoaded=!1,detectionInterval=null;const video=document.getElementById("video"),overlay=document.getElementById("overlay"),startButton=document.getElementById("startButton"),endButton=document.getElementById("endAttendance"),csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute("content"),canvInfo=document.getElementById("canvAttend"),pegawaiKosong=document.getElementById("pegawaiKosong"),pegawaiInfo=document.getElementById("pegawaiInfo"),lokasi="Titi Kuning",originalConsoleLog=console.log;function initializeFaceAPI(){Promise.all([faceapi.nets.ssdMobilenetv1.loadFromUri("/models"),faceapi.nets.faceRecognitionNet.loadFromUri("/models"),faceapi.nets.faceLandmark68Net.loadFromUri("/models")]).then((()=>{modelsLoaded=!0,console.log("Models loaded successfully")}))}async function getImagePathsForLabel(e){try{const t=await fetch(`/api/pegawai-images/${encodeURIComponent(e)}`);if(!t.ok)throw new Error("Network response was not ok");return await t.json()}catch(e){return console.log("Some folder of employee is empty. "),console.log("Please register their face first."),[]}}async function getLabeledFaceDescriptions(){const e=[];for(const t of labels){const n=[],a=await getImagePathsForLabel(t);for(const e of a)try{const t=await faceapi.fetchImage(e),a=await faceapi.detectSingleFace(t).withFaceLandmarks().withFaceDescriptor();console.log("Fetching image paths..."),a&&n.push(a.descriptor)}catch(t){console.error(`Error processing ${e}:`,t)}n.length>0&&e.push(new faceapi.LabeledFaceDescriptors(t,n))}return e}async function startFaceDetection(){if(!detectionInterval)try{const e=await getLabeledFaceDescriptions();if(console.log("Processing image for face data..."),0===e.length)return void console.error("No labeled face descriptors found.");const t=new faceapi.FaceMatcher(e),n={width:video.width,height:video.height};faceapi.matchDimensions(overlay,n);const a=overlay.getContext("2d",{willReadFrequently:!0});if(!a)return void console.error("Failed to get canvas context.");detectionInterval=setInterval((async()=>{try{const e=await faceapi.detectAllFaces(video).withFaceLandmarks().withFaceDescriptors(),o=faceapi.resizeResults(e,n),s=document.createElement("canvas");s.width=overlay.width,s.height=overlay.height;let i=!1,r=null,c=null,l=null;for(const e of o){const n=t.findBestMatch(e.descriptor),a=n.distance;if("unknown"!==n.label&&a<.4&&!detectedFaces.has(n.label)){const t=e.detection.box;new faceapi.draw.DrawBox(t,{label:n.toString()}).draw(s),i=!0,r=n.label,detectedFaces.add(n.label);const a=await getPegawaiDataByLabel(r);a&&(displayPegawaiData(a),c=a.kode_pegawai,l=a.nik_pegawai)}}if(i&&c){const e=await captureImage();if(e){const t=await getPegawaiDataByLabel(r);await saveImageToServer(e,r),await saveAttendance(c,l,t),canvInfo.style.display="block"}else console.error("Failed to capture image")}a.clearRect(0,0,overlay.width,overlay.height),a.drawImage(s,0,0)}catch(e){console.error("Error during face detection or matching:",e)}}),100),console.log("Face detection started")}catch(e){console.error("Error initializing face recognition:",e)}}function stopFaceDetection(){detectionInterval&&(clearInterval(detectionInterval),detectionInterval=null,console.log("Face detection stopped"))}function stopWebcam(){videoStream&&(console.log("Stopping webcam..."),stopFaceDetection(),videoStream.getTracks().forEach((e=>e.stop())),video.srcObject=null,videoStream=null,webcamStarted=!1)}function captureImage(){const e=document.createElement("canvas");e.width=video.videoWidth,e.height=video.videoHeight;return e.getContext("2d").drawImage(video,0,0,e.width,e.height),new Promise((t=>{e.toBlob((e=>{t(e||null)}),"image/png"),console.log("Image captured...")}))}async function saveImageToServer(e,t){const n=new FormData;n.append("image",e,"capturedImg.png"),n.append("label",t);try{const e=await fetch("/api/saveImage",{method:"POST",headers:{"X-CSRF-TOKEN":csrfToken},body:n});if(e.ok){const t=await e.json();t.imageUrl&&(displayImageOnCanvas(t.imageUrl),console.log("Image saved and displayed on canvas"))}else console.error("Failed to save image")}catch(e){console.error("Error saving image:",e)}}function displayImageOnCanvas(e){canvInfo.style.display="block";const t=document.getElementById("canvAttend").getContext("2d");if(t){const n=new Image;n.src=e,n.onload=()=>{canvInfo.width=n.width,canvInfo.height=n.height,t.drawImage(n,0,0)},n.onerror=()=>{console.error("Failed to load image:",e)}}else console.error("Failed to get canvas context.")}function customConsoleLog(e){const t=document.getElementById("consoleOutput");t&&(t.textContent+=e+"\n",t.scrollTop=t.scrollHeight),originalConsoleLog(e)}async function getPegawaiDataByLabel(e){try{const t=await fetch(`/api/getPegawaiData/${encodeURIComponent(e)}`);if(!t.ok)throw new Error("Network response was not ok");return await t.json()}catch(e){return console.error("Error fetching pegawai data:",e),null}}function displayPegawaiData(e){pegawaiKosong.style.display="none";const t=pegawaiInfo,n=e.jabatan_relasi?e.jabatan_relasi.nama_jabatan:"Jabatan tidak ditemukan",a=e.golongan_relasi?e.golongan_relasi.nama_golongan:"Golongan tidak ditemukan";t?(t.style.display="block",t.innerHTML=`\n            <ul class="space-y-4 text-left text-gray-500">\n                <li class="flex items-center space-x-3 rtl:space-x-reverse">\n                    <svg class="flex-shrink-0 w-3.5 h-3.5 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">\n                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />\n                    </svg>\n                    <span>Lokasi: ${lokasi}</span>\n                </li>\n                <li class="flex items-center space-x-3 rtl:space-x-reverse">\n                     <svg class="flex-shrink-0 w-3.5 h-3.5 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">\n                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />\n                    </svg>\n                    <span>Kode Pegawai: ${e.kode_pegawai}</span>\n                </li>\n                <li class="flex items-center space-x-3 rtl:space-x-reverse">\n                     <svg class="flex-shrink-0 w-3.5 h-3.5 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">\n                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />\n                    </svg>\n                    <span>NIK: ${e.nik_pegawai}</span>\n                </li>\n                <li class="flex items-center space-x-3 rtl:space-x-reverse">\n                     <svg class="flex-shrink-0 w-3.5 h-3.5 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">\n                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />\n                    </svg>\n                    <span>Nama: ${e.full_name}</span>\n                </li>\n                <li class="flex items-center space-x-3 rtl:space-x-reverse">\n                    <svg class="flex-shrink-0 w-3.5 h-3.5 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">\n                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />\n                    </svg>\n                    <span>Jabatan: ${n}</span>\n                </li>\n                <li class="flex items-center space-x-3 rtl:space-x-reverse">\n                    <svg class="flex-shrink-0 w-3.5 h-3.5 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">\n                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />\n                    </svg>\n                    <span>Golongan: ${a}</span>\n                </li>\n                <li class="flex items-center space-x-3 rtl:space-x-reverse">\n                    <svg class="flex-shrink-0 w-3.5 h-3.5 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">\n                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />\n                    </svg>\n                    <span id="waktu-masuk">Waktu Masuk: </span>\n                </li>\n                <li class="flex items-center space-x-3 rtl:space-x-reverse">\n                    <svg class="flex-shrink-0 w-3.5 h-3.5 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">\n                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />\n                    </svg>\n                    <span id="waktu-keluar">Waktu Keluar: </span>\n                </li>\n            </ul>\n        `):console.error("Element with ID 'pegawaiInfo' not found")}function jamMasuk(){const e=(new Date).toLocaleString("id-ID",{year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",hour12:!1,timeZone:"Asia/Jakarta"});document.getElementById("waktu-masuk").textContent=`Waktu Masuk: ${e}`}function jamKeluar(){const e=(new Date).toLocaleString("id-ID",{year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",hour12:!1,timeZone:"Asia/Jakarta"});document.getElementById("waktu-keluar").textContent=`Waktu Keluar: ${e}`}function formatDatabaseDate(e){return new Date(e).toLocaleString("id-ID",{year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",hour12:!1,timeZone:"Asia/Jakarta"})}function attendanceAlert(){Swal.fire({title:"Sukses!",html:"Berhasil melakukan absensi.",timer:1500,icon:"success",showConfirmButton:!1}),setTimeout((function(){pegawaiKosong.style.display="block",pegawaiInfo.style.display="none",canvInfo.style.display="none"}),2e3)}async function saveAttendance(e,t,n){try{const n=await fetch("/check-attendance",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":csrfToken},body:JSON.stringify({kode_pegawai:e,nik_pegawai:t})}),a=await n.json();if(a.hasClockedIn){const n=formatDatabaseDate(a.jam_masuk);document.getElementById("waktu-masuk").textContent=`Waktu Masuk: ${n}`,jamKeluar();const o=await fetch("/store-attendance-out",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":csrfToken},body:JSON.stringify({kode_pegawai:e,nik_pegawai:t})}),s=await o.json();s.success?(console.log(s.message),attendanceAlert()):console.error("Failed to record clock-out:",s.message)}else{const n=new Date,a={year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",hour12:!1,timeZone:"Asia/Jakarta"},o=n.toLocaleString("id-ID",a);document.getElementById("waktu-masuk").textContent=`Waktu Masuk: ${o}`,document.getElementById("waktu-keluar").textContent="Jam Keluar: Belum ada data";const s=await fetch("/store-attendance",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":csrfToken},body:JSON.stringify({kode_pegawai:e,nik_pegawai:t,jam_masuk:n.toISOString()})}),i=await s.json();i.success?(console.log(i.message),attendanceAlert()):console.error("Failed to record clock-in:",i.message)}}catch(e){console.error("Error checking or saving attendance:",e)}}console.log=customConsoleLog,canvInfo.style.display="none",startButton.addEventListener("click",(async()=>{if(overlay.style.display="block",canvInfo.style.display="none",startButton.setAttribute("disabled","disabled"),endButton.removeAttribute("disabled"),!webcamStarted&&modelsLoaded)try{const e=await navigator.mediaDevices.getUserMedia({video:!0,audio:!1});video.srcObject=e,videoStream=e,webcamStarted=!0,console.log("Webcam started successfully"),startFaceDetection()}catch(e){console.error("Error accessing webcam:",e)}})),video.addEventListener("loadedmetadata",(()=>{video.width=video.videoWidth,video.height=video.videoHeight,overlay.width=video.width,overlay.height=video.height})),endButton.addEventListener("click",(()=>{canvInfo.style.display="none",pegawaiKosong.style.display="block",pegawaiInfo.style.display="none",overlay.style.display="none",startButton.removeAttribute("disabled"),endButton.setAttribute("disabled","disabled"),stopWebcam()}));